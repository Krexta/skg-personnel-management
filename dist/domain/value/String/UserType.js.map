{"version":3,"sources":["../../../../src/domain/value/String/UserType.ts"],"sourcesContent":["import { BaseValueObject } from '../Base';\n\nexport const USER_TYPE_LIST = [\n  'PRESIDENT',\n  'PROJECT_MANAGER',\n  'GENERAL_AFFAIRS',\n] as const;\nexport type USER_TYPE = (typeof USER_TYPE_LIST)[number];\n\nexport class UserType extends BaseValueObject<'UserType', string> {\n  static from(value: string): UserType {\n    return new UserType(value);\n  }\n\n  protected validate(value: string): string {\n    if (!USER_TYPE_LIST.includes(value as USER_TYPE)) {\n      throw new Error('Invalid user type');\n    }\n    return value;\n  }\n}\n"],"names":["BaseValueObject","USER_TYPE_LIST","UserType","from","value","validate","includes","Error"],"mappings":"AAAA,SAASA,eAAe,QAAQ,aAAU;AAE1C,OAAO,MAAMC,iBAAiB;IAC5B;IACA;IACA;CACD,CAAU;AAGX,OAAO,MAAMC,iBAAiBF;IAC5B,OAAOG,KAAKC,KAAa,EAAY;QACnC,OAAO,IAAIF,SAASE;IACtB;IAEUC,SAASD,KAAa,EAAU;QACxC,IAAI,CAACH,eAAeK,QAAQ,CAACF,QAAqB;YAChD,MAAM,IAAIG,MAAM;QAClB;QACA,OAAOH;IACT;AACF"}