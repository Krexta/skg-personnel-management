{"version":3,"sources":["../../../../src/domain/value/String/BearerToken.spec.ts"],"sourcesContent":["import fc from 'fast-check';\nimport { describe, expect, it } from 'vitest';\n\nimport { BearerToken } from './BearerToken';\n\ndescribe('BearerToken', () => {\n  it('有効な文字列からBearerTokenを作成できる', () => {\n    fc.assert(\n      fc.property(\n        fc\n          .string()\n          .filter((v) => v.trim().length > 0)\n          .map((v) => v.trim()),\n        (value) => {\n          const token = BearerToken.from(value);\n          expect(token).toBeInstanceOf(BearerToken);\n        },\n      ),\n    );\n  });\n\n  it('トークンが空の場合はエラーになる', () => {\n    expect(() => BearerToken.from('')).toThrow('BearerToken is required');\n  });\n\n  it('トークンが空白のみの場合はエラーになる', () => {\n    fc.assert(\n      fc.property(fc.string({ unit: fc.constantFrom(' ', '　') }), (value) => {\n        expect(() => BearerToken.from(value)).toThrow(\n          'BearerToken is required',\n        );\n      }),\n    );\n  });\n});\n"],"names":["fc","describe","expect","it","BearerToken","assert","property","string","filter","v","trim","length","map","value","token","from","toBeInstanceOf","toThrow","unit","constantFrom"],"mappings":"AAAA,OAAOA,QAAQ,aAAa;AAC5B,SAASC,QAAQ,EAAEC,MAAM,EAAEC,EAAE,QAAQ,SAAS;AAE9C,SAASC,WAAW,QAAQ,mBAAgB;AAE5CH,SAAS,eAAe;IACtBE,GAAG,6BAA6B;QAC9BH,GAAGK,MAAM,CACPL,GAAGM,QAAQ,CACTN,GACGO,MAAM,GACNC,MAAM,CAAC,CAACC,IAAMA,EAAEC,IAAI,GAAGC,MAAM,GAAG,GAChCC,GAAG,CAAC,CAACH,IAAMA,EAAEC,IAAI,KACpB,CAACG;YACC,MAAMC,QAAQV,YAAYW,IAAI,CAACF;YAC/BX,OAAOY,OAAOE,cAAc,CAACZ;QAC/B;IAGN;IAEAD,GAAG,oBAAoB;QACrBD,OAAO,IAAME,YAAYW,IAAI,CAAC,KAAKE,OAAO,CAAC;IAC7C;IAEAd,GAAG,uBAAuB;QACxBH,GAAGK,MAAM,CACPL,GAAGM,QAAQ,CAACN,GAAGO,MAAM,CAAC;YAAEW,MAAMlB,GAAGmB,YAAY,CAAC,KAAK;QAAK,IAAI,CAACN;YAC3DX,OAAO,IAAME,YAAYW,IAAI,CAACF,QAAQI,OAAO,CAC3C;QAEJ;IAEJ;AACF"}